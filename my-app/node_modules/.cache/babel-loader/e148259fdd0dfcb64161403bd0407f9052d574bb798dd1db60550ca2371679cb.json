{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antim\\\\Desktop\\\\todo\\\\my-app\\\\src\\\\components\\\\CompletedTask\\\\index.js\";\nimport React from 'react';\nimport { Box, IconButton, Tooltip, Typography } from '@mui/material';\nimport SettingsBackupRestoreIcon from '@mui/icons-material/SettingsBackupRestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CompletedTask = ({\n  tasksList,\n  handleRestore\n}) => {\n  const CompletedTask = () => {\n    return tasksList === null || tasksList === void 0 ? void 0 : tasksList.map((task, ind) => {\n      if ((task === null || task === void 0 ? void 0 : task.status) === 'completed') {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          padding: \"10px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          gap: \"20px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            gap: \"20px\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: ind + 1 + '. '\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: task === null || task === void 0 ? void 0 : task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Completed @ \" + (task === null || task === void 0 ? void 0 : task.createdAt.toLocaleTimeString())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              sx: {\n                color: 'black'\n              },\n              color: \"primary\",\n              onClick: () => handleRestore(task),\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Restore\",\n                arrow: true,\n                children: /*#__PURE__*/_jsxDEV(SettingsBackupRestoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      minHeight: \"400px\",\n      border: \"2px solid #622d97\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        backgroundColor: \"#622d97\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          textAlign: \"center\",\n          color: \"#fff\",\n          children: \"Completed Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: CompletedTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = CompletedTask;\nexport default CompletedTask;\nvar _c;\n$RefreshReg$(_c, \"CompletedTask\");","map":{"version":3,"names":["React","Box","IconButton","Tooltip","Typography","SettingsBackupRestoreIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CompletedTask","tasksList","handleRestore","map","task","ind","status","padding","display","justifyContent","gap","children","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","toLocaleTimeString","sx","color","onClick","title","arrow","width","minHeight","border","backgroundColor","variant","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/antim/Desktop/todo/my-app/src/components/CompletedTask/index.js"],"sourcesContent":["import React from 'react'\r\nimport { Box, IconButton, Tooltip, Typography } from '@mui/material';\r\nimport SettingsBackupRestoreIcon from '@mui/icons-material/SettingsBackupRestore';\r\n\r\nconst CompletedTask = ({ tasksList, handleRestore }) => {\r\n\r\n    const CompletedTask = () => {\r\n\r\n        return tasksList?.map((task, ind) => {\r\n            if (task?.status === 'completed') {\r\n                return (\r\n                    <Box padding='10px' display='flex' justifyContent='space-between' gap='20px'>\r\n                        <Box display='flex' justifyContent='space-between' gap='20px'>\r\n                            <Typography>\r\n                            {ind + 1 +'. '}\r\n                            </Typography>\r\n                            <Typography>\r\n                                {task?.task}\r\n                            </Typography>\r\n                            <Typography>\r\n                                { \"Completed @ \" +   task?.createdAt.toLocaleTimeString()}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            <IconButton sx={{ color: 'black' }} color=\"primary\" onClick={() => handleRestore(task)}>\r\n                            <Tooltip title=\"Restore\" arrow>\r\n                                <SettingsBackupRestoreIcon />\r\n                            </Tooltip>\r\n\r\n                            </IconButton>\r\n                        </Box>\r\n                    </Box>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Box width='100%' minHeight='400px' border='2px solid #622d97' >\r\n                <Box backgroundColor='#622d97'>\r\n                    <Typography variant='h4' textAlign='center' color='#fff'>\r\n                        Completed Task\r\n                    </Typography>\r\n                </Box>\r\n                <Box>\r\n                    {\r\n                        CompletedTask()\r\n                    }\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\nexport default CompletedTask;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}