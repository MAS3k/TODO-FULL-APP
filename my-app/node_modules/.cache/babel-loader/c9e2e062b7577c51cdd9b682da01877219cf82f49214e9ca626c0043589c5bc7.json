{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antim\\\\Desktop\\\\todo\\\\my-app\\\\src\\\\components\\\\PendingTask\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, IconButton, Tooltip, Typography, TextField, Button } from \"@mui/material\";\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PendingTask = ({\n  taskList,\n  handleComplete,\n  handleDelete,\n  handleEdit,\n  selectedTask,\n  handleAddNewTask // You need to pass a function to handle adding new tasks\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  const [newTaskTime, setNewTaskTime] = useState(\"\");\n  const handleAddTask = () => {\n    if (newTask && newTaskTime) {\n      // Ensure that both newTask and newTaskTime are not empty\n      handleAddNewTask(newTask, newTaskTime); // Call the function to add the new task\n      setNewTask(\"\"); // Clear the input fields\n      setNewTaskTime(\"\");\n    }\n  };\n  const showTask = () => {\n    return taskList === null || taskList === void 0 ? void 0 : taskList.map((task, ind) => {\n      if ((task === null || task === void 0 ? void 0 : task.status) === \"pending\") {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          padding: \"10px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          gap: \"20px\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            gap: \"20px\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: ind + 1 + \". \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: task === null || task === void 0 ? void 0 : task.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: task === null || task === void 0 ? void 0 : task.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: task === null || task === void 0 ? void 0 : task.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    minHeight: \"400px\",\n    border: \"2px solid #479\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      backgroundColor: \"#479\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        textAlign: \"center\",\n        color: \"#fff\",\n        children: \"Pending Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        marginX: \"0px\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"#000\",\n          children: [\"S.no & Title\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginX: \"30px\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"#000\",\n          children: [\"Created Time\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginX: \"0px\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"#000\",\n          children: [\"Icons\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task\",\n        variant: \"outlined\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Task Time\",\n        variant: \"outlined\",\n        value: newTaskTime,\n        onChange: e => setNewTaskTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: showTask()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(PendingTask, \"6C5LDW2BYZ1iCr5Kg6x83PROLp0=\");\n_c = PendingTask;\nexport default PendingTask;\nvar _c;\n$RefreshReg$(_c, \"PendingTask\");","map":{"version":3,"names":["React","useState","Box","IconButton","Tooltip","Typography","TextField","Button","TaskAltIcon","DeleteIcon","EditIcon","jsxDEV","_jsxDEV","PendingTask","taskList","handleComplete","handleDelete","handleEdit","selectedTask","handleAddNewTask","_s","newTask","setNewTask","newTaskTime","setNewTaskTime","handleAddTask","showTask","map","task","ind","status","padding","display","justifyContent","gap","children","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","time","id","width","minHeight","border","flexDirection","backgroundColor","variant","textAlign","color","marginX","label","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/antim/Desktop/todo/my-app/src/components/PendingTask/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nconst PendingTask = ({\r\n  taskList,\r\n  handleComplete,\r\n  handleDelete,\r\n  handleEdit,\r\n  selectedTask,\r\n  handleAddNewTask, // You need to pass a function to handle adding new tasks\r\n}) => {\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const [newTaskTime, setNewTaskTime] = useState(\"\");\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask && newTaskTime) {\r\n      // Ensure that both newTask and newTaskTime are not empty\r\n      handleAddNewTask(newTask, newTaskTime); // Call the function to add the new task\r\n      setNewTask(\"\"); // Clear the input fields\r\n      setNewTaskTime(\"\");\r\n    }\r\n  };\r\n\r\n  const showTask = () => {\r\n    return taskList?.map((task, ind) => {\r\n      if (task?.status === \"pending\") {\r\n        return (\r\n          <Box\r\n            padding=\"10px\"\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            gap=\"20px\"\r\n            key={task.id}\r\n          >\r\n            <Box display=\"flex\" justifyContent=\"space-between\" gap=\"20px\">\r\n              <Typography>{ind + 1 + \". \"}</Typography>\r\n              <Typography>{task?.task}</Typography>\r\n              <Typography>{task?.createdAt}</Typography>\r\n              <Typography>{task?.time}</Typography>\r\n            </Box>\r\n            <Box>{/* Buttons for Edit, Complete, and Delete */}</Box>\r\n          </Box>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      minHeight=\"400px\"\r\n      border=\"2px solid #479\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box backgroundColor=\"#479\">\r\n        <Typography variant=\"h4\" textAlign=\"center\" color=\"#fff\">\r\n          Pending Task\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box display=\"flex\" justifyContent=\"space-around\">\r\n        <Box marginX=\"0px\">\r\n          <Typography variant=\"h6\" color=\"#000\">\r\n            S.no & Title\r\n            <hr />\r\n          </Typography>\r\n        </Box>\r\n        <Box marginX=\"30px\">\r\n          <Typography variant=\"h6\" color=\"#000\">\r\n            Created Time\r\n            <hr />\r\n          </Typography>\r\n        </Box>\r\n        <Box marginX=\"0px\">\r\n          <Typography variant=\"h6\" color=\"#000\">\r\n            Icons\r\n            <hr />\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box>\r\n        <TextField\r\n          label=\"New Task\"\r\n          variant=\"outlined\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <TextField\r\n          label=\"New Task Time\"\r\n          variant=\"outlined\"\r\n          value={newTaskTime}\r\n          onChange={(e) => setNewTaskTime(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask}>\r\n          Add Task\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box>{showTask()}</Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PendingTask;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}